# base
snippet base
	.PHONY: clean, install, full
	CC = gcc
	CFLAGS = -g -Wall
	OBJ_FILES = $1.o

	all: $1

	obj/%.o: %.c
		mkdir -p obj
		$(CC) $(CFLAGS) -c -o $@ $<
	
	${1:out}: $(addprefix obj/,$(notdir $(OBJ_FILES)))
		$(CC) $(CFLAGS) -o $@ $+

	clean:
		rm -f obj/*.o core.* $1

	install:
		cp $1 /usr/local/bin/$1

	full:
		make clean && make -j10 && make install
#base for cpp
snippet basepp
	.PHONY: clean, install, full
	CC = g++
	CFLAGS = -g -Wall -std=c++1y
	LFLAGS =
	OBJ_FILES = $1.o

	all: $1

	obj/%.o: %.cpp
		mkdir -p obj
		$(CC) $(CFLAGS) -c -o $@ $<
	
	${1:out}: $(addprefix obj/,$(notdir $(OBJ_FILES)))
		$(CC) $(CFLAGS) -o $@ $+ $(LFLAGS)

	clean:
		rm -f obj/*.o core.* $1

	install:
		cp $1 /usr/local/bin/$1

	full:
		make clean && make -j10 && make install
#base for cpp using cth
snippet basecth
	.PHONY: clean, install, full
	CC = g++
	CFLAGS = -g -Wall -std=c++1y
	LCTH = -lcth -lGLEW -lGL -lSDL2 -lSDL2main -lSDL2_image -lSDL2_mixer -lboost_filesystem -lboost_system -lyaml-cpp -lIL -lILU  -lassimp -llua -ldl -lfreetype
	LFLAGS = $(LCTH)
	OBJ_FILES = $1.o

	all: $1

	obj/%.o: %.cpp
		mkdir -p obj
		$(CC) $(CFLAGS) -c -o $@ $<
	
	${1:out}: $(addprefix obj/,$(notdir $(OBJ_FILES)))
		$(CC) $(CFLAGS) -o $@ $+ $(LFLAGS)

	clean:
		rm -f obj/*.o core.* $1

	install:
		cp $1 /usr/local/bin/$1

	full:
		make clean && make -j10 && make install
# the simplest makefile
snippet basic:
	out: main.cpp
		g++ -g -Wall -std=c++1y main.cpp -o ${1:out}
# add
snippet add
	${1:out}: $1.o
		$(CC) $(CFLAGS) -o $@ $+
# print
snippet print
	print-%: ; @echo $*=$($*)
# ifeq
snippet if
	ifeq (${1:cond0}, ${2:cond1})
		${0:${VISUAL}}
	endif
# ifeq ... else ... endif
snippet ife
	ifeq (${1:cond0}, ${2:cond1})
		${3:${VISUAL}}
	else
		${0}
	endif
# else ...
snippet el
	else
		${0:${VISUAL}}
# .DEFAULT_GOAL := target
snippet default
	.DEFAULT_GOAL := ${1}
# help target for self-documented Makefile
snippet help
	help: ## Prints help for targets with comments
		@cat $(MAKEFILE_LIST) | grep -E '^[a-zA-Z_-]+:.*?## .*$$' | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $\$1, $\$2}'
	${0}
# linking cth
snippet lcth
	LCTH = -lcth -lGLEW -lGL -lSDL2 -lSDL2main -lSDL2_mixer -lboost_filesystem -lboost_system -lyaml-cpp -lIL -lILU  -lassimp -llua -ldl -lfreetype

